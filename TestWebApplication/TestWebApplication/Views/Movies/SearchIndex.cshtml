@model IEnumerable<TestWebApplication.Models.Movie>

@{
    ViewBag.Title = "SearchIndex";
}

<h2>SearchIndex</h2>

<p>
    @Html.ActionLink("Create New", "Create")

    @*Post method always is treated as get - this allows to bookmark pages with search results*@
    @using(Html.BeginForm("SearchIndex", "Movies", FormMethod.Get)){
        <p>
            @*movieGenre variable is placed in viewbag in controller*@
            @*second paramater is label and has value of empty string - so searches in this way among all genres
              other options when page is rendered has no value and option tag content is passed as value to the controller*@
            
            Genre: @Html.DropDownList("movieGenre", "All") 
            Title: @Html.TextBox("SearchString") <br/>
            <input type="submit" value="Filter"/>
        </p>
    }
</p>
<table>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ReleaseDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Genre)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ReleaseDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Genre)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Price)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ID })
        </td>
    </tr>
}

</table>
